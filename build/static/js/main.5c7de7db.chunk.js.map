{"version":3,"sources":["components/BarChart.js","data.csv","App.js","index.js"],"names":["BarChart","label","dataY","title","data","labels","datasets","backgroundColor","borderColor","borderWidth","height","width","options","scales","yAxes","ticks","beginAtZero","display","text","fontSize","App","useState","setData","setLabel","setDataY","setCity","useEffect","csv","datacsv","then","eachCity","Set","forEach","c","add","Viewer_Hometown","Array","from","graphData","filter","labelsGenre","Map","d","Program_Genre","Object","keys","Number_of_Viewers","values","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAyDeA,EAtDE,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAEvB,OACI,qBAAKC,MAAM,SAAX,SACI,cAAC,MAAD,CAEIC,KAAM,CACFC,OAAQJ,EACRK,SAAU,CAAC,CACPL,MAAO,aACPG,KAAMF,EACNK,gBAAiB,CACb,0BACA,0BACA,0BACA,0BACA,2BACA,2BAEJC,YAAa,CACT,wBACA,wBACA,wBACA,wBACA,yBACA,yBAEJC,YAAa,KAIrBC,OAAQ,IACRC,MAAO,IACPC,QAAS,CACLC,OAAQ,CACJC,MAAO,CAAC,CACJC,MAAO,CACHC,aAAa,MAIzBb,MAAO,CACHc,SAAS,EACTC,KAAM,qDACNC,SAAU,U,QC/CnB,MAA0B,iCCoE1BC,MA7Df,WAAgB,IAAD,EACWC,qBADX,mBACNjB,EADM,KACAkB,EADA,OAEaD,mBAAS,IAFtB,mBAENpB,EAFM,KAECsB,EAFD,OAGaF,mBAAS,IAHtB,mBAGNnB,EAHM,KAGCsB,EAHD,OAIWH,mBAAS,IAJpB,mBAIAI,GAJA,WAoDb,OA3CAC,qBAAU,WAERC,YAAIC,GAASC,MAAK,SAAAzB,GAChBkB,EAAQlB,GAGR,IAAM0B,EAAW,IAAIC,IACrB3B,EAAK4B,SAAQ,SAAAC,GACXH,EAASI,IAAID,EAAEE,oBAEjBV,EAAQW,MAAMC,KAAKP,IAKnB,IAAMQ,EAAYlC,EAAKmC,QAAO,SAAAnC,GAAI,MAA6B,eAAzBA,EAAK+B,iBAA6D,cAAzB/B,EAAK+B,mBAK9EK,EAAc,IAAIC,IACxBH,EAAUN,SAAQ,SAAAU,GAChBF,EAAYE,EAAEC,eAAiB,KAIjCpB,EAASqB,OAAOC,KAAKL,IACrBF,EAAUN,SAAQ,SAAAU,GAChBA,EAAEI,mBAAqBJ,EAAEI,kBACzBN,EAAYE,EAAEC,gBAAkBD,EAAEI,qBAGpCtB,EAASoB,OAAOG,OAAOP,SAKxB,IAOD,qBAAKQ,UAAU,MAAf,SACE,cAAC,EAAD,CAAU5C,KAAMA,EAAMH,MAAOA,EAAOC,MAAOA,OCvDjD+C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.5c7de7db.chunk.js","sourcesContent":["import React from 'react';\nimport { Bar } from 'react-chartjs-2';\n\nconst BarChart = ({ label, dataY }) => {\n\n    return (\n        <div title=\"chart \">\n            <Bar\n\n                data={{\n                    labels: label,\n                    datasets: [{\n                        label: '# of Votes',\n                        data: dataY,\n                        backgroundColor: [\n                            'rgba(255, 99, 132, 0.2)',\n                            'rgba(54, 162, 235, 0.2)',\n                            'rgba(255, 206, 86, 0.2)',\n                            'rgba(75, 192, 192, 0.2)',\n                            'rgba(153, 102, 255, 0.2)',\n                            'rgba(255, 159, 64, 0.2)'\n                        ],\n                        borderColor: [\n                            'rgba(255, 99, 132, 1)',\n                            'rgba(54, 162, 235, 1)',\n                            'rgba(255, 206, 86, 1)',\n                            'rgba(75, 192, 192, 1)',\n                            'rgba(153, 102, 255, 1)',\n                            'rgba(255, 159, 64, 1)'\n                        ],\n                        borderWidth: 1\n                    }]\n                }}\n\n                height={400}\n                width={600}\n                options={{\n                    scales: {\n                        yAxes: [{\n                            ticks: {\n                                beginAtZero: true\n                            }\n                        }]\n                    },\n                    title: {\n                        display: true,\n                        text: 'Total Number of Views from Pittsburgh or Cleveland',\n                        fontSize: 36\n                    }\n                }}\n\n\n            />\n        </div>\n    )\n}\n\nexport default BarChart;","export default __webpack_public_path__ + \"static/media/data.309ea1f8.csv\";","import React, { useState, useEffect } from 'react';\nimport BarChart from \"./components/BarChart\"\nimport { csv } from 'd3';\nimport datacsv from './data.csv';\n\n\n\nfunction App() {\n  const [data, setData] = useState()\n  const [label, setLabel] = useState([])\n  const [dataY, setDataY] = useState([])\n  const [city, setCity] = useState([])\n\n\n\n\n  useEffect(() => {\n    //Get data from csv\n    csv(datacsv).then(data => {\n      setData(data);\n\n      // Add city for x axis\n      const eachCity = new Set();\n      data.forEach(c => {\n        eachCity.add(c.Viewer_Hometown)\n      })\n      setCity(Array.from(eachCity))\n\n\n      // Filter data for where hometown is Pittsburgh or Cleveland\n      // (can be adjusted for different cities)\n      const graphData = data.filter(data => data.Viewer_Hometown === \"Pittsburgh\" || data.Viewer_Hometown === \"Cleveland\")\n\n\n      //Create map to keep track of views for each city\n      // (can be adjusted for average)\n      const labelsGenre = new Map();\n      graphData.forEach(d => {\n        labelsGenre[d.Program_Genre] = 0;\n      })\n\n\n      setLabel(Object.keys(labelsGenre))\n      graphData.forEach(d => {\n        d.Number_of_Viewers = +d.Number_of_Viewers\n        labelsGenre[d.Program_Genre] += d.Number_of_Viewers\n\n      })\n      setDataY(Object.values(labelsGenre))\n\n\n\n    });\n  }, []);\n\n\n\n\n\n  return (\n    <div className=\"App\">\n      <BarChart data={data} label={label} dataY={dataY} />\n\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}